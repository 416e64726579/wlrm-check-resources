apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 1
      manualSelector: false
      parallelism: 1
      template:
        spec:
          automountServiceAccountToken: false
          containers:
          - image: "{{ .Values.image }}"
            imagePullPolicy: Always
            name: wlrm-check
            command: ["/wlrm-check-resources/wlrm"]
            args: ["-waitDuration", "120"]
            env:
            - name: WALLARM_API
              value: "{{ .Values.wallarm_api_host }}"
            - name: WALLARM_UUID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}.wapi.creds
                  key: wallarm_uuid
            - name: WALLARM_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}.wapi.creds
                  key: wallarm_secret
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}.telegram.creds
                  key: telegram_token
            - name: CHAT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}.telegram.creds
                  key: chat_id
            volumeMounts:
              - name: jwt-credentials
                readOnly: true
                mountPath: /wlrm-check-resources/jwt-credentials.json
                subPath: jwt-credentials.json
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          shareProcessNamespace: false
          terminationGracePeriodSeconds: 10
          volumes:
            - name: jwt-credentials
              configMap:
                name: jwt-credentials
  schedule: "{{ .Values.schedule }}"
  startingDeadlineSeconds: 10
  successfulJobsHistoryLimit: 10
  suspend: false
